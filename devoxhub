wait("0.2")
-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- === KeySystem + Discord (Before Startup) ===
local WindowConfig = {
    Name = "DevoxHUB",
    Icon = 93973861464448,
    LoadingTitle = "DevoxHUB MS SCRIPT",
    LoadingSubtitle = "by Cylo",
    ShowText = "Rayfield",
    Theme = "Blood",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = true,
        Invite = "cEgVBaHcrz",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "Devox Key",
        Subtitle = "Key System",
        Note = "KEY IS IN DISCORD https://discord.gg/cEgVBaHcrz",
        FileName = "DevoxKey",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"DEVOXHUB123"}
    }
}

-- === Startup Sound + Blur + Shake ===
do
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://6807091537"
    sound.Volume = 1
    sound.Parent = workspace
    sound:Play()

    local blur = Instance.new("BlurEffect", game.Lighting)
    blur.Size = 0

    local shakeAmplitude = 0.5
    local shakeDuration = 5
    local startTime = tick()

    local heartbeatConn
    heartbeatConn = RunService.Heartbeat:Connect(function(dt)
        local elapsed = tick() - startTime
        if elapsed > shakeDuration then
            heartbeatConn:Disconnect()
            blur:Destroy()
            return
        end
        camera.CFrame = camera.CFrame * CFrame.new(
            (math.random()-0.5)*shakeAmplitude,
            (math.random()-0.5)*shakeAmplitude,
            (math.random()-0.5)*shakeAmplitude
        )
        blur.Size = math.sin(elapsed*math.pi/shakeDuration)*24
    end)
end

-- === Create main window ===
local Window = Rayfield:CreateWindow(WindowConfig)

-- === Player Tab ===
local PlayerTab = Window:CreateTab("Player", 4483362458)

-- === MAGS Toggle ===
local magsEnabled = false
local debounce = false
local magConnection
local MAG_RADIUS = 9 -- synced with ESP

local MagToggle = PlayerTab:CreateToggle({
    Name = "MAGS",
    CurrentValue = false,
    Flag = "MAGS_Toggle",
    Callback = function(value)
        magsEnabled = value
        if magsEnabled then
            magConnection = RunService.Heartbeat:Connect(function()
                local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if not hrp then return end
                local region = Region3.new(
                    hrp.Position - Vector3.new(MAG_RADIUS, MAG_RADIUS, MAG_RADIUS),
                    hrp.Position + Vector3.new(MAG_RADIUS, MAG_RADIUS, MAG_RADIUS)
                )
                local footballs = workspace:FindPartsInRegion3(region, nil, math.huge)
                for _, football in ipairs(footballs) do
                    if football.Name == "Football" and football:IsA("BasePart") then
                        if (football.Position - hrp.Position).Magnitude < MAG_RADIUS then
                            if not debounce then
                                debounce = true
                                local leftArm = player.Character:FindFirstChild("Left Arm") or player.Character:FindFirstChild("LeftHand")
                                if leftArm then
                                    firetouchinterest(leftArm, football, 0)
                                    task.wait()
                                    firetouchinterest(leftArm, football, 1)
                                end
                                task.wait(0.2)
                                debounce = false
                            end
                        end
                    end
                end
            end)
        else
            if magConnection then
                magConnection:Disconnect()
                magConnection = nil
            end
        end
    end,
})

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.M then
        magsEnabled = not magsEnabled
        MagToggle:Set(magsEnabled)
    end
end)

-- === Football ESP Toggle ===
local espEnabled = false
local espConnection
local espBalls = {}
local ESP_RADIUS = 9 -- synced with MAGS

local function addFootballESP(football)
    if espBalls[football] then return end
    local sphere = Instance.new("SphereHandleAdornment")
    sphere.Adornee = football
    sphere.Radius = ESP_RADIUS
    sphere.Color3 = Color3.fromRGB(0,0,139)
    sphere.Transparency = 0.6
    sphere.AlwaysOnTop = true
    sphere.ZIndex = 5
    sphere.Parent = game.CoreGui
    espBalls[football] = sphere

    football.AncestryChanged:Connect(function(_, parent)
        if not parent and espBalls[football] then
            espBalls[football]:Destroy()
            espBalls[football] = nil
        end
    end)
end

local function removeAllFootballESP()
    for _, sphere in pairs(espBalls) do
        sphere:Destroy()
    end
    espBalls = {}
end

local FootballESPToggle = PlayerTab:CreateToggle({
    Name = "Football ESP",
    CurrentValue = false,
    Flag = "FootballESP_Toggle",
    Callback = function(value)
        espEnabled = value
        if espEnabled then
            for _, football in ipairs(workspace:GetDescendants()) do
                if football:IsA("BasePart") and football.Name == "Football" then
                    addFootballESP(football)
                end
            end

            workspace.DescendantAdded:Connect(function(obj)
                if obj:IsA("BasePart") and obj.Name == "Football" then
                    addFootballESP(obj)
                end
            end)

            espConnection = RunService.RenderStepped:Connect(function()
                for football, sphere in pairs(espBalls) do
                    if not (football and football.Parent) then
                        sphere:Destroy()
                        espBalls[football] = nil
                    else
                        sphere.Radius = ESP_RADIUS
                    end
                end
            end)
        else
            if espConnection then
                espConnection:Disconnect()
                espConnection = nil
            end
            removeAllFootballESP()
        end
    end,
})

-- === Defense Hitbox Toggle ===
local hitboxEnabled = false
local hitboxConnection
local hitboxESP
local HITBOX_RADIUS = 9 -- optional, you can match with MAGS/ESP
local TACKLE_SPEED = 25

local HitboxToggle = PlayerTab:CreateToggle({
    Name = "Defense Hitbox",
    CurrentValue = false,
    Flag = "DefenseHitbox_Toggle",
    Callback = function(enabled)
        hitboxEnabled = enabled
        if hitboxEnabled then
            hitboxConnection = RunService.Heartbeat:Connect(function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
                local myHRP = player.Character.HumanoidRootPart

                local closestTarget = nil
                local closestDistance = math.huge

                for _, otherPlayer in ipairs(Players:GetPlayers()) do
                    if otherPlayer ~= player and otherPlayer.Character then
                        local hrp = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                        local tool = otherPlayer.Character:FindFirstChildOfClass("Tool")
                        if hrp and tool and tool.Name == "Football" then
                            local distance = (hrp.Position - myHRP.Position).Magnitude
                            if distance < closestDistance then
                                closestDistance = distance
                                closestTarget = hrp
                            end
                        end
                    end
                end

                if closestTarget then
                    if not hitboxESP then
                        hitboxESP = Instance.new("SphereHandleAdornment")
                        hitboxESP.Adornee = closestTarget
                        hitboxESP.Radius = HITBOX_RADIUS
                        hitboxESP.Color3 = Color3.fromRGB(0,0,139)
                        hitboxESP.Transparency = 0.6
                        hitboxESP.AlwaysOnTop = true
                        hitboxESP.ZIndex = 5
                        hitboxESP.Parent = game.CoreGui
                    else
                        hitboxESP.Adornee = closestTarget
                        hitboxESP.Radius = HITBOX_RADIUS
                    end

                    local distanceToTarget = (closestTarget.Position - myHRP.Position).Magnitude
                    if distanceToTarget <= HITBOX_RADIUS then
                        local direction = (closestTarget.Position - myHRP.Position).Unit
                        local velocity = direction * TACKLE_SPEED
                        if not myHRP:FindFirstChild("TackleVelocity") then
                            local bv = Instance.new("BodyVelocity")
                            bv.Name = "TackleVelocity"
                            bv.MaxForce = Vector3.new(1e5,1e5,1e5)
                            bv.Velocity = velocity
                            bv.Parent = myHRP
                        else
                            myHRP.TackleVelocity.Velocity = velocity
                        end

                        -- Auto-disable on tackle
                        HitboxToggle:Set(false)
                        hitboxEnabled = false
                        if hitboxConnection then
                            hitboxConnection:Disconnect()
                            hitboxConnection = nil
                        end
                        if myHRP:FindFirstChild("TackleVelocity") then
                            myHRP.TackleVelocity:Destroy()
                        end
                        if hitboxESP then
                            hitboxESP:Destroy()
                            hitboxESP = nil
                        end
                    else
                        if myHRP:FindFirstChild("TackleVelocity") then
                            myHRP.TackleVelocity:Destroy()
                        end
                    end
                else
                    if myHRP:FindFirstChild("TackleVelocity") then
                        myHRP.TackleVelocity:Destroy()
                    end
                    if hitboxESP then
                        hitboxESP:Destroy()
                        hitboxESP = nil
                    end
                end
            end)
        else
            if hitboxConnection then
                hitboxConnection:Disconnect()
                hitboxConnection = nil
            end
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local myHRP = player.Character.HumanoidRootPart
                if myHRP:FindFirstChild("TackleVelocity") then
                    myHRP.TackleVelocity:Destroy()
                end
            end
            if hitboxESP then
                hitboxESP:Destroy()
                hitboxESP = nil
            end
        end
    end,
})
